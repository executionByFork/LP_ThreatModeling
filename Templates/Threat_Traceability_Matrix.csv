STRIDE,Interaction,Exploitation Description,Attack Surface,Impact,Mitigation
Information Disclosure,Any user on the internal network <--> PostgreSQL Database,Attacker could login with PostgreSQL default user credentials,The open ports on the DB,"Loss, modification, or theft of data",Remove default user or change the default credentials
Elevation of Privilege,Any authenticated user <--> Rails API Service,User sends a malicious payload of commands which get executed on Rails API ,User connections to the Rails API,Remote code execution leads to control of the system,Sanitize user input
Tampering,Any authenticated user <--> Rails API Service,Web Server could be subject to cross site scripting,User connections to the Web Server,Arbitrary code execution on clients,Sanitize user input
Spoofing & Elevation of Privilege,User (Spoofing Authenticator) <--> Rails API Service,An attacker could send a fake Authenticator response token to Hive and take actions as an authorized user,Connection between Rails API and Authenticator,"Loss, modification, or theft of data",Validate the connection to Authenticator
Tampering,Any authenticated user <--> Rails API Service <--> Database,SQL injection,Any user input that gets processed into a Database query,"Loss, modification, or theft of data",Sanitize user input
Spoofing,Any user on the internal network <--> Database,PostgreSQL server accepts connections from anyone on the internal network,Connections to the Database,"Loss, modification, or theft of data",Whitelist the Hive servers so only they can open a connection
Spoofing,Rails API Service <--> User (Spoofing Database),Spoofing the DB to trick the Rails API into reading from or writing to a malicious database,The connection between the Database and Rails Server,Loss and theft of information,Validate the DB server and use a secure channel
Information Disclosure,HAproxy <--> Any user on the internal network <--> Rails API,User sits on the connection between HAproxy and the Hive server to sniff un-encrypted traffic,Connection between Hive servers and HAproxy ,Theft credentials or modification of data,Encrypt communication between HAproxy and Hive servers
Information Disclosure,Any user on the internal network <-(Direct)-> Docker Container Port,Docker containers allow connections on ports other than the ones opened for Hive services,Extraneous ports on Docker container,Opens up the attack surface for other exploits,Close unneeded ports
Denial of Service,Any user on the internal network <--> Rails API Service,Denial of service via resource consumption. Hive does not limit traffic flow,User connections to the Rails API or Web Server,The application's service would become unavailable,Limit resource consumption
Spoofing,Any user on the internal network <-(Direct)-> Rails API Service,User bypasses the load balancer and HAproxy to directly connect to a Hive Server,HAproxy to server connection,Bypass the load balancer for easier DoS and loss of HTTPS,Whitelist the HAproxy so only it can connect to Hive servers
